@page "/bindProp"
@using Model
<div class="bg-light border p-2">
    <h2 class="bg-light border p-2">
        First Room
    </h2>
    Room:@Room.RoomName
    <br />
    Price:@Room.Price
    <br />
    <input type="number" @bind-value="@Room.Price" @bind-value:event="oninput" />
    <br />
    <input type="checkbox" @bind-value="Room.IsActive"
           checked="@(Room.IsActive?"checked":null)" /> &nbsp; Is Active
    <br />
    <span>
        this room is @(Room.IsActive?"Active":"InActive")
    </span>
    <br />
    <select @bind="SelectedRoomProp">
        @foreach (var prop in Room.RoomProps)
        {
            <option value="@prop.Name">@prop.Name</option>
        }
    </select>
    <span>Room prop selected : @SelectedRoomProp</span>

</div>
<div>
    <br />
    <h2 class="text-info">Room List</h2>
    <table class="table table-dark">
        @foreach (var room in RoomsList)
        {
            <tr>
                <td>
                    <input type="text" @bind-value="room.RoomName"
                           @bind-value:event="oninput" />
                </td>
                <td>
                    <input type="text" @bind-value="room.Price"
                           @bind-value:event="oninput" />
                </td>
                @foreach (var roomProp in room.RoomProps)
                {
                    <td>@roomProp.Name - @roomProp.Value</td>
                }
            </tr>
        }
    </table>
    <br />
    @foreach (var room in RoomsList)
    {
        <p>@room.RoomName's price is @room.Price</p>
    }
</div>
@code{
    string SelectedRoomProp = "";
    List<Room> RoomsList = new List<Room>();
    Room Room = new Room()
    {
        Id = 1,
        RoomName = "King Suite",
        IsActive = true,
        Price = 1200,
        RoomProps = new List<RoomProp>()
{
            new RoomProp()
            {
                Id=1,
                Name="Area",
                Value="300"
            },
            new RoomProp()
            {
                Id=2,
                Name="Occupancy",
                Value="5"
            }
        }
    };
    protected override void OnInitialized()
    {
        base.OnInitialized();
        RoomsList.Add(new Room()
        {
            Id = 101,
            RoomName = "King Suite",
            IsActive = true,
            Price = 1200,
            RoomProps = new List<RoomProp>()
{
            new RoomProp()
            {
                Id=1,
                Name="Area",
                Value="300"
            },
            new RoomProp()
            {
                Id=2,
                Name="Occupancy",
                Value="5"
            }
        }
        });
        RoomsList.Add(new Room()
        {
            Id = 201,
            RoomName = "Single Room",
            IsActive = true,
            Price = 300,
            RoomProps = new List<RoomProp>()
{
            new RoomProp()
            {
                Id=1,
                Name="Area",
                Value="30"
            },
            new RoomProp()
            {
                Id=2,
                Name="Occupancy",
                Value="1"
            }
        }
        });
    }
}