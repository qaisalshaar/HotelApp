@page "/BlazorJS"
@inject IJSRuntime IJSRuntime


<h3>BlazorJS</h3>

<div class="row">
    <button class="btn btn-primary" @onclick="DisplayConfirmBox">Display Confirm Box</button>
</div>


<div class="row">

    @if (confirmresult){

        <h5 class="m-2">Confirmed </h5>
    }else{

        <h5 class="m-2">Not Confirmed </h5>
    }
</div>

<div class="row mt-3">

    @*  <button class="btn btn-success" @onclick="Displaytoastersuccess">Display Toaster Success</button>
    <button class="btn btn-danger ml-2" @onclick="DisplaytoasterError">Display Toaster Error</button> *@

    @*  <button class="btn btn-success" @onclick="@(()=>IJSRuntime.DisplaytoasterSuccess("Successfully Operation"))">Display Toaster Success</button> *@
    <button class="btn btn-success" @onclick="()=>IJSRuntime.DisplaytoasterSuccess(SD.Success_Operation)">Display Toaster Success</button>

    @*   <button class="btn btn-danger ml-2" @onclick="@(()=>IJSRuntime.DisplaytoasterError("Failed Operation"))">Display Toaster Error</button> *@


    <button class="btn btn-danger ml-3" @onclick="()=>IJSRuntime.DisplaytoasterError(SD.Error_Operation)">Display Toaster Error</button>


    <button class="btn btn-warning ml-3" @onclick="DeleteConfirmBox">Show Delete Dialog</button>

</div>



<div class="row mt-3">

    @if (Deleteconfirmresult)
    {

        <h5 class="m-2">Deleted !!!! </h5>
    }
    else
    {

        <h5 class="m-2">Not Deleted </h5>
    }
</div>
@code {
    private string message = "Are You Sure Kais?";

    // استقيال القيمة من ال bool
    public bool confirmresult { get; set; }
    public bool Deleteconfirmresult { get; set; }


    private async Task DisplayConfirmBox(){

        confirmresult= await IJSRuntime.InvokeAsync<bool>("confirm", message);
    }

    // show Delete Dialog

    private async Task DeleteConfirmBox()
    {

        Deleteconfirmresult = await IJSRuntime.ShowConfirm();
    }


    private async Task Displaytoastersuccess()
    {
        // await IJSRuntime.InvokeVoidAsync("ShowToaster", "Success", "Successfully Operation");
        
    }

    private async Task DisplaytoasterError()
    {

        // await IJSRuntime.InvokeVoidAsync("ShowToaster", "error", "Failed Operation");
    }
}
